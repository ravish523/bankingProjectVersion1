<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Rajeev" name="Default test" tests="3" failures="0" timestamp="31 Aug 2020 09:33:40 GMT" time="0.506" errors="0">
  <testcase name="@BeforeTest setExtent" time="0.0" classname="extentReportsPractice.extentReports">
    <failure type="java.lang.NoSuchMethodError" message="org.apache.logging.slf4j.Log4jLoggerFactory: method &amp;lt;init&amp;gt;()V not found">
      <![CDATA[java.lang.NoSuchMethodError: org.apache.logging.slf4j.Log4jLoggerFactory: method <init>()V not found
	at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:53)
	at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:41)
	at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)
	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)
	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:417)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:362)
	at org.apache.logging.slf4j.SLF4JLoggerContext.getLogger(SLF4JLoggerContext.java:39)
	at org.apache.log4j.Category.<init>(Category.java:78)
	at org.apache.log4j.Logger.<init>(Logger.java:33)
	at org.apache.log4j.Category$PrivateAdapter.newLogger(Category.java:506)
	at org.apache.log4j.Category.getInstance(Category.java:118)
	at org.apache.log4j.Category.getInstance(Category.java:98)
	at org.apache.log4j.Logger.getLogger(Logger.java:37)
	at freemarker.log._Log4jLoggerFactory.getLogger(_Log4jLoggerFactory.java:29)
	at freemarker.log.Logger.getLogger(Logger.java:357)
	at freemarker.template.Configuration.<clinit>(Configuration.java:125)
	at com.aventstack.extentreports.reporter.BasicFileReporter.start(BasicFileReporter.java:152)
	at com.aventstack.extentreports.ExtentObservable.register(ExtentObservable.java:179)
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at com.aventstack.extentreports.ExtentReports.attachReporter(ExtentReports.java:69)
	at extentReportsPractice.extentReports.setExtent(extentReports.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
    </failure>
  </testcase> <!-- @BeforeTest setExtent -->
  <testcase name="@BeforeMethod setup" time="0.001" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterTest endReport" time="0.0" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="noCommerceLoginTest" time="0.001" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- noCommerceLoginTest -->
  <testcase name="noCommerceLogoTest" time="0.001" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- noCommerceLogoTest -->
  <testcase name="noCommerceTitleTest" time="0.001" classname="extentReportsPractice.extentReports">
    <skipped/>
  </testcase> <!-- noCommerceTitleTest -->
</testsuite> <!-- Default test -->
